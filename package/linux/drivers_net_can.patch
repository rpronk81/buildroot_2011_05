--- linux-2.6.34.orig/drivers/net/can/mscan/mscan.c	2010-05-16 23:17:36.000000000 +0200
+++ linux-2.6.34/drivers/net/can/mscan/mscan.c	2011-03-04 15:14:16.694000673 +0100
@@ -383,16 +383,9 @@ static void mscan_get_err_frame(struct n
 			frame->can_id |= CAN_ERR_BUSOFF;
 			/*
 			 * The MSCAN on the MPC5200 does recover from bus-off
-			 * automatically. To avoid that we stop the chip doing
-			 * a light-weight stop (we are in irq-context).
+			 * automatically.
 			 */
-			if (priv->type != MSCAN_TYPE_MPC5121) {
-				out_8(&regs->cantier, 0);
-				out_8(&regs->canrier, 0);
-				setbits8(&regs->canctl0,
-					 MSCAN_SLPRQ | MSCAN_INITRQ);
-			}
-			can_bus_off(dev);
+			priv->can.can_stats.bus_off++;
 			break;
 		default:
 			break;
@@ -443,8 +436,7 @@ static int mscan_rx_poll(struct napi_str
 	if (!(in_8(&regs->canrflg) & (MSCAN_RXF | MSCAN_ERR_IF))) {
 		napi_complete(&priv->napi);
 		clear_bit(F_RX_PROGRESS, &priv->flags);
-		if (priv->can.state < CAN_STATE_BUS_OFF)
-			out_8(&regs->canrier, priv->shadow_canrier);
+		out_8(&regs->canrier, priv->shadow_canrier);
 		ret = 0;
 	}
 	return ret;
